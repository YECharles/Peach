<?xml version="1.0" encoding="iso-8859-1"?>
<module name="Ft.Xml.Xslt.TextSax">
  <modification-date>2001-12-26 20:53:48</modification-date>
  <abstract>Components for reading Text files from a SAX-like producer.
WWW: http://4suite.org/4DOM         e-mail: support@4suite.org</abstract>
  <description>Copyright (c) 1999-2001 Fourthought Inc, USA.   All Rights Reserved.
See  http://4suite.org/COPYRIGHT  for license and copyright information</description>
  <classes>
    <class name="TextGenerator" public="yes">
      <abstract/>
      <description/>
      <method-resolution-order>
        <base name="TextGenerator" module="Ft.Xml.Xslt.TextSax"/>
      </method-resolution-order>
      <methods name="TextGenerator" module="Ft.Xml.Xslt.TextSax">
        <method public="no" name="__init__" id="TextGenerator-__init__">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg default="0" name="keepAllWs"/>
          </arguments>
        </method>
        <method public="yes" name="characters" id="TextGenerator-characters">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="ch"/>
            <arg name="start"/>
            <arg name="length"/>
          </arguments>
        </method>
        <method public="yes" name="endElement" id="TextGenerator-endElement">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="name"/>
          </arguments>
        </method>
        <method public="yes" name="error" id="TextGenerator-error">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="exception"/>
          </arguments>
        </method>
        <method public="yes" name="fatalError" id="TextGenerator-fatalError">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="exception"/>
          </arguments>
        </method>
        <method public="yes" name="getRootNode" id="TextGenerator-getRootNode">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
        </method>
        <method public="yes" name="ignorableWhitespace" id="TextGenerator-ignorableWhitespace">
          <abstract>If 'keepAllWs' permits, add ignorable white-space as a text node.
Remember that a Document node cannot contain text nodes directly.
If the white-space occurs outside the root element, there is no place
for it in the DOM and it must be discarded.</abstract>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="ch"/>
            <arg name="start"/>
            <arg name="length"/>
          </arguments>
        </method>
        <method public="yes" name="startElement" id="TextGenerator-startElement">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="name"/>
            <arg name="attribs"/>
          </arguments>
        </method>
      </methods>
    </class>
  </classes>
</module>
