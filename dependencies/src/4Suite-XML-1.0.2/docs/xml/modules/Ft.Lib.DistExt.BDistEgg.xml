<?xml version="1.0" encoding="iso-8859-1"?>
<module name="Ft.Lib.DistExt.BDistEgg">
  <modification-date>2006-10-20 13:44:36</modification-date>
  <abstract/>
  <description/>
  <classes>
    <class name="BDistEgg" public="yes">
      <bases>
        <base documented="no" class="Command" module="distutils.cmd"/>
      </bases>
      <abstract/>
      <description/>
      <method-resolution-order>
        <base name="BDistEgg" module="Ft.Lib.DistExt.BDistEgg"/>
        <base name="Command" module="distutils.cmd"/>
      </method-resolution-order>
      <methods name="Command" module="distutils.cmd">
        <method public="yes" name="check_zip_safe" id="BDistEgg-check_zip_safe">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
        </method>
        <method public="yes" name="finalize_options" id="BDistEgg-finalize_options">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
          <overrides documented="no" class="Command" module="distutils.cmd"/>
        </method>
        <method public="yes" name="get_eager_resources" id="BDistEgg-get_eager_resources">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
        </method>
        <method public="yes" name="get_egg_filename" id="BDistEgg-get_egg_filename">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
        </method>
        <method public="yes" name="get_entry_points" id="BDistEgg-get_entry_points">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
        </method>
        <method public="yes" name="initialize_options" id="BDistEgg-initialize_options">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
          <overrides documented="no" class="Command" module="distutils.cmd"/>
        </method>
        <method public="yes" name="make_distribution" id="BDistEgg-make_distribution">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="files"/>
          </arguments>
        </method>
        <method public="yes" name="newer" id="BDistEgg-newer">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="description"/>
            <arg name="filename"/>
          </arguments>
        </method>
        <method public="yes" name="run" id="BDistEgg-run">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
          <overrides documented="no" class="Command" module="distutils.cmd"/>
        </method>
        <method public="yes" name="run_command_family" id="BDistEgg-run_command_family">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="family"/>
            <arg name="commands"/>
          </arguments>
        </method>
        <method public="yes" name="write_extension_module_stubs" id="BDistEgg-write_extension_module_stubs">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
        </method>
        <method public="yes" name="write_file" id="BDistEgg-write_file">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="description"/>
            <arg name="contents"/>
            <arg name="filename"/>
          </arguments>
        </method>
        <method public="yes" name="write_file_lines" id="BDistEgg-write_file_lines">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="description"/>
            <arg name="lines"/>
            <arg name="filename"/>
          </arguments>
        </method>
        <method public="yes" name="write_file_sections" id="BDistEgg-write_file_sections">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
            <arg name="description"/>
            <arg name="sections"/>
            <arg name="filename"/>
          </arguments>
        </method>
        <method public="yes" name="write_metadata" id="BDistEgg-write_metadata">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
        </method>
        <method public="yes" name="write_namespace_package_stubs" id="BDistEgg-write_namespace_package_stubs">
          <abstract/>
          <description/>
          <arguments>
            <arg name="self"/>
          </arguments>
        </method>
      </methods>
      <members name="Command" module="distutils.cmd">
        <member public="yes" name="boolean_options" id="BDistEgg-boolean_options">
          <value>['keep-temp', 'skip-build']</value>
        </member>
        <member public="yes" name="build_commands" id="BDistEgg-build_commands">
          <value>['build_py', 'build_clib', 'build_ext', 'build_scripts']</value>
        </member>
        <member public="yes" name="command_name" id="BDistEgg-command_name">
          <value>'bdist_egg'</value>
        </member>
        <member public="yes" name="description" id="BDistEgg-description">
          <value>'create a Python Egg (.egg) built distribution'</value>
        </member>
        <member public="yes" name="install_commands" id="BDistEgg-install_commands">
          <value>['install_lib', 'install_data', 'install_l10n', 'install_config']</value>
        </member>
        <member public="yes" name="user_options" id="BDistEgg-user_options">
          <value>[('bdist-dir=', None, 'temporary directory for creating the distribution'), ('keep-temp', 'k', 'keep the pseudo-installation tree around after creating the distribution archive'), ('plat-name=', 'p', 'platform name to embed in generated filenames'), ('dist-dir=', 'd', 'directory to put final built distributions in'), ('skip-build', None, 'skip rebuilding everything (for testing/debugging)')]</value>
        </member>
      </members>
      <inherited-methods documented="no" class="Command" module="distutils.cmd">
        <member-reference name="__getattr__" public="no"/>
        <member-reference name="__init__" public="no"/>
        <member-reference name="announce" public="yes"/>
        <member-reference name="copy_file" public="yes"/>
        <member-reference name="copy_tree" public="yes"/>
        <member-reference name="debug_print" public="yes"/>
        <member-reference name="dump_options" public="yes"/>
        <member-reference name="ensure_dirname" public="yes"/>
        <member-reference name="ensure_filename" public="yes"/>
        <member-reference name="ensure_finalized" public="yes"/>
        <member-reference name="ensure_string" public="yes"/>
        <member-reference name="ensure_string_list" public="yes"/>
        <member-reference name="execute" public="yes"/>
        <member-reference name="get_command_name" public="yes"/>
        <member-reference name="get_finalized_command" public="yes"/>
        <member-reference name="get_sub_commands" public="yes"/>
        <member-reference name="make_archive" public="yes"/>
        <member-reference name="make_file" public="yes"/>
        <member-reference name="mkpath" public="yes"/>
        <member-reference name="move_file" public="yes"/>
        <member-reference name="reinitialize_command" public="yes"/>
        <member-reference name="run_command" public="yes"/>
        <member-reference name="set_undefined_options" public="yes"/>
        <member-reference name="spawn" public="yes"/>
        <member-reference name="warn" public="yes"/>
      </inherited-methods>
      <inherited-members documented="no" class="Command" module="distutils.cmd">
        <member-reference name="sub_commands" public="yes"/>
      </inherited-members>
    </class>
  </classes>
  <functions>
    <function public="yes" name="get_constants" id="get_constants">
      <abstract>Returns the mapping of top-level &quot;constants&quot; defined by
'code'.</abstract>
      <description/>
      <arguments>
        <arg name="code"/>
      </arguments>
    </function>
    <function public="yes" name="get_symbols" id="get_symbols">
      <abstract>Returns the set of names and string constants used by 'code'
and any nested code objects.</abstract>
      <description/>
      <arguments>
        <arg name="code"/>
        <arg default="None" name="_symbols"/>
      </arguments>
    </function>
  </functions>
  <globals>
    <global public="yes" name="EXTENSION_MODULE_STUB" id="EXTENSION_MODULE_STUB">
      <value>'# dynamic module loader stub for .egg zipfiles\nd...load_dynamic(__name__, __file__)\n__bootstrap__()\n'</value>
    </global>
    <global public="yes" name="NAMESPACE_PACKAGE_STUB" id="NAMESPACE_PACKAGE_STUB">
      <value>'# loader stub for .egg namespace packages\n__import__(&quot;pkg_resources&quot;).declare_namespace(__name__)\n'</value>
    </global>
    <global public="no" name="__zipsafe__" id="__zipsafe__">
      <value>True</value>
    </global>
  </globals>
</module>
