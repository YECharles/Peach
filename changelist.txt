Peach Changlist
===============

v2.3.7
------

 - Bug: Fixed a couple bugs related to opening and closing processes
        on OS X using the FileWriterLauncher.
 - Bug: Fixed couple bugs in XmlAnalyzer when attached to a String

v2.3.6
------

 - New: Multiple Publishers are now supported by adding a "name" attribute
        to the <Publisher> element and a "publisher" attribute to <Action>.
 - Changed: Improved Agent to Publisher communication, increasing fuzzing speed
 - Changed: Improved osx.CrashReporter monitor.  More reliable now.
 - Bug: Fixed issue were Peach Validator would not always run analyzers
 - Bug: Updated WireShark Analyzer to use <DataModel> instead of <Template>
 - Bug: Fixed bug with ASCII strings containing char values over 127
 - Bug: Fixed bug in <Choice> fast checking.
 - Bug: Fixed minor issue with <Result> cracking (marked data as haveAll).
 - Bug: Fixed two bugs in UdpListener
 - Bug: StringMutator changed to set currentValue instead of finalValue.
        fixes bugs related to NULL termination or Unicode encodings.
 - Bug: Windows Debugger module didn't have CRLF line feeds causing
        notepad to display stacktrace wrong.
 - Bug: Random freeze while calculating frames in stack trace
 - Bug: Strings loose NULL termination when being mutated


v2.3.5
------

 - New: minset promoted to first tier tool, now compiled
 - New: Action when attribute has a new method available, 'getXml()'
        to allow for using xpaths in when expressions.
 - New: Action when attribute has access to the 'random' module
 - New: Windows Debugger now has IgnoreSecondChanceGardPage option
 - New: New reproduction strategy for running pre-fuzzed files.
 - New: New default strategy is deterministic and random
 - New: New more agressive Blob mutator
 - New: Data fileName attribute can now specify multiple files.
        This will only work with the random mutation strategy.
        Files will be switched every 100 iterations by default,
        but switchCount attribute can change that.  Unix glob
        support ("folder/*/*.gif"), filename, or folder path.
 - New: Tcp publisher has new "throttle" parameter to specify wait
        time between connections.
 - New: Windows debugger module now suppoerts attaching by PID
 - New: !exploitable windbg module included in distribution
 - New: Flags now supported enabling padding to behave like structs
 - New: Cracking optimizations for Choice blocks added
 - Changed: Updated minset.py to use pydbgeng
 - Changed: Use random filename to move data between debugger threads
 - Changed: Xml Analyzer, default string type now utf8
 - Changed: Windows Debugger no longer takes mini-dump
 - Changed: Enabled mutator ValidValuesMutator by default
 - Changed: UnixDebugger updated to support new file fuzzing model
 - Changed: Cracker will throw exception if it cannot size a Blob
 - Changed: Optmized test cases for small Numbers
 - Changed: Binary analyzer changes how it locates strings as needed
 - Changed: Random mutation strategy more agressive
 - Changed: Data loaded by <Data fileName=""/> failes we will exit
 - Changed: Improved accuracy of count vs. actual rounds
 - Changed: Unix Debugger now uses multiprocessing module
 - Bug: Fixed a couple odd bugs in Flags/Flag
 - Bug: Fixed bug in Memory agent
 - Bug: Fixed bug in Network Pcap agent
 - Bug: Fixed checksum fixup to alwasy return positive crc32
 - Bug: Fixed bug were sequencial mutator strategy would throw an exception
 - Bug: Cracker updated to better handle Choices inside of Choices
 - Bug: Fixed bug in UnixDebugger & vtrace where threads are not 
        being released.
 - Bug: Fixed bug in UnixDebugger were vtrace file handles were not
        being released.
 - Bug: Fixed bug with relations and complex Choice blocks


v2.3.4
------

 - New: Pech Validator now runs Analyzers
 - Changed: Moved Flags to use a bit buffer class
 - Changed: Listening for ExitProcess event in Debugger
 - Changed: Improved random mutation weighting system
 - Changed: Improved paired token support in StringTokenizer


v2.3.3
------

 - Bug: Fixed bug with Numerical mutators and Flags
 - Bug: Flags parsing backwards
 - Changed: Console output now shows element being modified


v2.3.2
------

 - Change: Windows debugger runs in seprate process
 - Change: Patch for Linux Ping Monitor support


v2.3.1
------

 - New: Added --range parameter to commandline
 - New: Improved start time of mutators
 - New: SMTP Publisher
 - New: AirPcap publisher
 - New: Generate fault log when agent connection fails.
 - Change: Estimated complete time updated every 20 iterations instead of 40.
 - Depricated: Peach Builder -- To far out of date currently
 - Bug: Fixed command line parsing for -p from batch files
 - Bug: Win32 Dependencies batch files, fixed broken names
 - Bug: Removed assert checks from mutators
 - Bug: Reset debugger log buffer on each test
 - Bug: Misc bugs found testing with complex fuzzer definitions
 - Bug: Unicode bug fixes
 - Bug: self.find('element') failed when inside of two sized Blocks.
 - Bug: Fixed off-by-one error on --skipto


v2.3
----

 - Analyzers.  Asn1, Xml, Binary, StringToken, WireShark
 - Mutation Strategies.  Sequencial is default, also "random"
 - Standardized common methods in expressions
 - XmlElement and XmlAttribute type
 - Asn1Type
 - Hint: NumericalString
 - Binary Analyzer checks to see if string is number and apply
   NumericalString hint
 - StringToken Analyzer adds NumericalString hint
 - XmlElement/XmlAttribute add NumericalString hint
 - Constraints (v2.2? or 2.3?)
 - Complex structures with pointers using CTypes
 - Data sets can set arrays
 - Data sets can select Choice child
 - Unicode mutators
 - Added true unicode support
 - UTF8 support
 - Internally all strings are unicode
 
 - Bug fixes.  More bug fixes than you can shake a stick at.


v2.2
----

 [ Incomplete ]

 - Removed Application Verifier support


= END =
